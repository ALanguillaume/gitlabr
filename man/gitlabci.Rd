% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ci.R
\name{gl_ci_job}
\alias{gl_ci_job}
\alias{gl_default_ci_pipeline}
\alias{use_gitlab_ci}
\title{Define GitLab CI jobs}
\usage{
gl_ci_job(job_name, stage = job_name, allowed_dependencies = c(), ...)

gl_default_ci_pipeline()

use_gitlab_ci(
  image = "rocker/verse:latest",
  repo_name = "https://packagemanager.rstudio.com/all/__linux__/focal/latest",
  url = "https://gitlab.com",
  path = ".gitlab-ci.yml",
  overwrite = TRUE,
  add_to_Rbuildignore = TRUE,
  type = "check-coverage-pkgdown"
)
}
\arguments{
\item{job_name}{Name of job template to get CI definition elements}

\item{stage}{Name of stage job belongs to}

\item{allowed_dependencies}{List of job names that are allowed to be listed as dependencies of jobs. Usually this is all existing other jobs.}

\item{...}{passed on to ci_r_script: booleans vanilla or slave translate to R executable options with the same name}

\item{image}{Docker image to use in GitLab ci. If NULL, not specified!}

\item{repo_name}{REPO_NAME environment variable for R CRAN mirror used}

\item{url}{url of the GitLab instance}

\item{path}{destination path for writing GitLab CI yml file}

\item{overwrite}{whether to overwrite existing GitLab CI yml file}

\item{add_to_Rbuildignore}{add CI yml file (from \code{path}) to .Rbuildignore?}

\item{type}{type of the CI template to use}
}
\description{
Define GitLab CI jobs
}
\details{
Typs available are:  

- "check-coverage-pkgdown": Check package along with Code coverage with {covr}
 and {pkgdown} site on GitLab Pages
- "check-coverage-pkgdown-renv": Check package built in a fixed {renv} state
 along with Code coverage with {covr} and {pkgdown} site on GitLab Pages.
- "bookdown": Build {bookdown} HTML and PDF site on GitLab Pages
- "bookdown-production": Build {bookdown} HTML and PDF site on GitLab Pages. 
 Where principal page is for branch named 'production' and "dev/" sub-folder is for 
 'main' (or 'master') branch.
}
\examples{
gl_ci_job("build", allowed_dependencies = "test")
use_gitlab_ci(image = "pointsofinterest/gitlabr:latest", path = tempfile(fileext = ".yml"))
}
