% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/issues.R
\name{gl_new_issue}
\alias{gl_new_issue}
\alias{gl_create_issue}
\alias{gl_close_issue}
\alias{gl_reopen_issue}
\alias{gl_assign_issue}
\alias{gl_unassign_issue}
\alias{gl_delete_issue}
\title{Post a new issue or edit one}
\usage{
gl_new_issue(project, title, ...)

gl_create_issue(project, title, ...)

gl_close_issue(project, issue_id, ...)

gl_reopen_issue(project, issue_id, ...)

gl_assign_issue(project, issue_id, assignee_id = NULL, ...)

gl_unassign_issue(project, issue_id, ...)

gl_delete_issue(project, issue_id, ...)
}
\arguments{
\item{project}{project where the issue should be posted}

\item{title}{title of the issue}

\item{...}{further parameters passed to the API call, may
contain description, assignee_id, milestone_id, labels, state_event (for edit_issue).}

\item{assignee_id}{numeric id of users as returned in '/users/' API request}
}
\description{
Post a new issue or edit one
}
\examples{
\dontrun{
# create an issue
new_issue_infos <- gl_create_issue(project = "<<your-project-id>>", "A simple issue")
new_issue_iid <- new_issue_infos$iid[1]
## close issue
gl_close_issue("<<your-project-id>>", new_issue_iid)
## reopen issue
gl_reopen_issue("<<your-project-id>>", new_issue_iid)
## edit its description
gl_edit_issue("<<your-project-id>>", new_issue_iid, description = "This is a test")
## assign it
gl_assign_issue("<<your-project-id>>", new_issue_iid, assignee_id = "<<user-id>>")
## unassign it
gl_unassign_issue("<<your-project-id>>", new_issue_iid)
## Delete issue as if it never existed
gl_delete_issue("<<your-project-id>>", new_issue_iid)
}
}
